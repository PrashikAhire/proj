exp 8:
server 
import socket 
 
# Create TCP/IP socket 
server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 
 
# Bind the socket to the port 
server_address = ('0.0.0.0', 12345) 
print(f"Starting server on {server_address[0]} port {server_address[1]}") 
server_socket.bind(server_address) 
 
# Listen for incoming connections 
server_socket.listen(1) 
 
while True: 
    print("Waiting for a connection...") 
    connection, client_address = server_socket.accept() 
     
    try: 
        print(f"Connection established with {client_address}") 
 
        # Open a file to write incoming data 
        with open("server_received.txt", "a") as file: 
            while True: 
                data = connection.recv(1024) 
                if data: 
                    decoded_data = data.decode() 
                    print(f"Received: {decoded_data}") 
                    file.write(decoded_data + "\n")  # Add newline for readability 
 
                    # Send acknowledgment to client 
                    connection.sendall(b"Data received by server.") 
                else: 
                    print("No more data from client. Closing connection.") 
                    break 
    finally: 
        connection.close()



client :

import socket 
 
# Create a TCP/IP socket 
client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 
 
# Connect the socket to the server 
server_address = ('127.0.0.1', 12345) 
print(f"Connecting to {server_address[0]} port {server_address[1]}") 
 
client_socket.connect(server_address) 
 
try: 
    # Write data to a file 
    with open("client_message.txt", "w") as file: 
        file.write("Hello, Server! This is the client sending data from a file.") 
 
    # Read the file content and send it 
    with open("client_message.txt", "r") as file: 
        message = file.read() 
 
    print(f"Sending: {message}") 
    client_socket.sendall(message.encode()) 
 
    # Receive server response 
    data = client_socket.recv(1024) 
    print(f"Received from server: {data.decode()}") 
 
finally: 
    client_socket.close()